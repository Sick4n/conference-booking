# Generated by Django 5.0.3 on 2024-03-09 10:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=100, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('issue', models.TextField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('profile', models.ImageField(db_index=True, null=True, upload_to='usr/profile')),
                ('first_name', models.CharField(db_index=True, default='', max_length=100, null=True)),
                ('last_name', models.CharField(db_index=True, default='', max_length=100, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('phone_no', models.BigIntegerField(db_index=True, null=True)),
                ('username', models.CharField(db_index=True, max_length=100, unique=True)),
                ('otp', models.PositiveIntegerField(db_index=True, null=True)),
                ('otp_limit', models.IntegerField(db_index=True, null=True)),
                ('otp_delay', models.TimeField(auto_now=True, db_index=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_login', models.DateTimeField(db_index=True, default=None, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('password', models.CharField(db_index=True, default=None, max_length=200)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('conference_slug', models.SlugField(unique=True)),
                ('description', models.TextField(db_index=True)),
                ('start_time', models.TimeField(auto_now_add=True)),
                ('end_time', models.TimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_overed', models.BooleanField(default=False)),
                ('place', models.CharField(db_index=True, max_length=100, null=True)),
                ('people', models.ManyToManyField(related_name='attended_meetups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='r_conference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conferences', to='core_1.meetup'),
        ),
    ]
